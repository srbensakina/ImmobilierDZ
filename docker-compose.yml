version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - auth-network
  app:
    image: 'immobilierdz:latest'
    build:
     context: .
    env_file:
      - dev.env
      #- prod.env
    ports:
      - "8080:8080"
    container_name: app
    depends_on:
      - rabbitmq
      - keycloakdb
      - discovery
      - gateway
    environment:
      #- SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      #- SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_PROFILES_ACTIVE=docker

    networks:
      -  auth-network

  keycloakdb:
    image: 'postgres:14.7-alpine'
    container_name: keycloakdb
    env_file:
      - dev.env
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: jdbc:postgresql://keycloakdb:5432/immobilierdz
    volumes:
        - pgdata:/var/lib/postgresql/data
    networks:
      - auth-network
  discovery:
    image: raniabensakina/eureka:latest
    hostname: discovery
    ports:
        - "8761:8761"
    networks:
      - auth-network

  gateway:
    image: raniabensakina/gateway:latest
    hostname: gateway
    environment:
      - eureka.client.service-url.defaultZone=http://discovery:8761/eureka/
    ports:
        - "8082:8082"
    depends_on:
      - discovery
    networks:
        - auth-network

volumes:
   pgdata:

networks:
  auth-network:
    driver: bridge